image:
  repository: dock.mau.dev/tulir/mautrix-twilio
  tag: latest
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

service:
  type: ClusterIP
  port: 29322

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# Homeserver details
homeserver:
  # The address that this appservice can use to connect to the homeserver.
  address: https://example.com
  # The address that Twilio can use to download media from the homeserver.
  publicAddress: https://matrix.example.com
  # The domain of the homeserver (for MXIDs, etc).
  domain: example.com
  # Whether or not to verify the SSL certificate of the homeserver.
  # Only applies if address starts with https://
  verifySSL: true

# Application service host/registration related details
# Changing these values requires regeneration of the registration.
appservice:
  # The full URI to the database. SQLite and Postgres are fully supported.
  # Other DBMSes supported by SQLAlchemy may or may not work.
  # Format examples:
  #   SQLite:   sqlite:///filename.db
  #   Postgres: postgres://username:password@hostname/dbname
  database: postgres://username:password@hostname/dbname

  # The maximum body size of appservice API requests (from the homeserver) in mebibytes
  # Usually 1 is enough, but on high-traffic bridges you might need to increase this to avoid 413s
  maxBodySize: 1

  id: twilio
  botUsername: twiliobot
  # Display name and avatar for bot. Set to "remove" to remove display name/avatar, leave empty
  # to leave display name/avatar as-is.
  botDisplayname: Twilio bridge bot
  botAvatar: mxc://maunium.net/FYuKJHaCrSeSpvBJfHwgYylP

  # Community ID for bridged users (changes registration file) and rooms.
  # Must be created manually.
  communityID: false

  # Authentication tokens for AS <-> HS communication. Autogenerated; do not modify.
  asToken: SET TO RANDOM STRING
  hsToken: SET TO RANDOM STRING

# The keys below can be used to override the configs in the base config:
# https://github.com/tulir/mautrix-twilio/blob/master/example-config.yaml
# Note that the "appservice" and "homeserver" sections are above and slightly different than the base.

# Bridge config
bridge:
  # Localpart template of MXIDs for remote users.
  # {userid} is replaced with the phone number of the user (plain/E.164 international format).
  username_template: "twilio_whatsapp_{userid}"
  # Displayname template for remote users.
  # {displayname} is replaced with the phone number of the user (human-readable international format).
  alias_template: "twilio_whatsapp_{groupname}"

  # List of users to always invite to newly created portal rooms.
  invite_users: []

  # Permissions for using the bridge.
  # Permitted values:
  #       user - Use the bridge with puppeting.
  #      admin - Use and administrate the bridge.
  # Permitted keys:
  #        * - All Matrix users
  #   domain - All users on that homeserver
  #     mxid - Specific user
  permissions:
    "example.com": "user"
    "@admin:example.com": "admin"

# Twilio webhook settings.
twilio:
  # Twilio account ID
  account_id: AC1082dcd0e9ae51404f6cae3581edfbff
  # Twilio phone number to send messages from.
  sender_id: whatsapp:+1415550199
  # Your Twilio auth token (get from Twilio dashboard front page)
  secret: 2035141f21a001604e763c009aa3be4c
  # Path prefix for webhook endpoints. Subpaths are /status and /receive.
  # Note that the webhook must be put behind a reverse proxy with https.
  webhook_path: /twilio
